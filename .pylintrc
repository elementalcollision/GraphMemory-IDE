# Enhanced PyLint Configuration for GraphMemory-IDE
# Optimized for parallel execution and enterprise-scale analysis
# Integrated with Phase 1 security findings and SonarQube analysis

[MASTER]
# Enable parallel execution with auto-detection (research finding: `-j 0`)
jobs=0

# Use multiple processes for faster execution
processes=4

# Pickle collected data for persistent analysis
persistent=yes

# Cache analysis results for incremental execution  
cache-size=500

# Load additional plugins for enhanced analysis
load-plugins=pylint.extensions.check_elif,
             pylint.extensions.bad_builtin,
             pylint.extensions.docparams,
             pylint.extensions.docstyle,
             pylint.extensions.empty_comment,
             pylint.extensions.overlapping_exceptions,
             pylint.extensions.redefined_variable_type,
             pylint.extensions.set_membership,
             pylint.extensions.typing,
             pylint.extensions.while_used

# Performance optimization for large codebases
extension-pkg-whitelist=pydantic,fastapi,kuzu,redis,asyncio

# Integration with existing security tools
security-source-dirs=server,dashboard,scripts,monitoring

[MESSAGES CONTROL]
# Enable all messages by default for comprehensive analysis
enable=all

# Disable specific checks that conflict with GraphMemory-IDE patterns
disable=raw-checker-failed,
        bad-inline-option,
        locally-disabled,
        file-ignored,
        suppressed-message,
        useless-suppression,
        deprecated-pragma,
        use-symbolic-message-instead,
        # FastAPI specific patterns
        too-few-public-methods,
        # Async patterns
        unused-argument,
        # Graph database patterns  
        too-many-arguments,
        too-many-locals,
        # Analytics engine patterns
        too-many-branches,
        too-many-statements,
        # Real-time collaboration patterns
        too-many-instance-attributes,
        # Security patterns from Phase 1
        duplicate-code

[REPORTS]
# Output format optimized for CI/CD integration
output-format=json

# Generate reports for SonarQube integration
reports=yes

# Score threshold for quality gates
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Performance reporting
score=yes

[REFACTORING]
# Complexity thresholds for enterprise standards
max-complexity=15

# Nested block limits for maintainability
max-nested-blocks=6

[BASIC]
# Naming conventions aligned with Python standards
good-names=i,j,k,ex,Run,_,id,db,logger,app,api,ctx,req,res

# GraphMemory-IDE specific naming patterns
class-rgx=[A-Z_][a-zA-Z0-9]+$
function-rgx=[a-z_][a-z0-9_]{2,30}$
method-rgx=[a-z_][a-z0-9_]{2,30}$
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$
attr-rgx=[a-z_][a-z0-9_]{2,30}$
argument-rgx=[a-z_][a-z0-9_]{2,30}$
variable-rgx=[a-z_][a-z0-9_]{2,30}$
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Documentation requirements
no-docstring-rgx=^_
docstring-min-length=10

[FORMAT]
# Line length aligned with Black formatter
max-line-length=88

# Indentation aligned with PEP 8
indent-string='    '

# String quote consistency
string-quote=single-avoid-escape

[LOGGING]
# Logging format validation for GraphMemory-IDE patterns
logging-format-style=new

# Logging modules used in the project
logging-modules=logging

[MISCELLANEOUS]
# Notes and TODO tracking
notes=FIXME,XXX,TODO,BUG,HACK

[SIMILARITIES]
# Duplicate code detection thresholds
min-similarity-lines=4
ignore-comments=yes
ignore-docstrings=yes
ignore-imports=no

[SPELLING]
# Spelling check configuration
# spelling-dict=en_US (removed due to installation dependency)

# GraphMemory-IDE specific terms
spelling-private-dict-file=.pylint-spelling-dict

[STRING]
# String format validation
check-str-concat-over-line-jumps=yes

[TYPECHECK]
# Type checking integration with MyPy
generated-members=numpy.*,torch.*,pytest.*

# GraphMemory-IDE specific modules
ignored-modules=kuzu,redis,fastapi

# Context managers for async patterns
contextual-decorators=contextlib.contextmanager,asynccontextmanager

[VARIABLES]
# Variable naming and usage patterns
dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# Allow unused variables in specific patterns
allowed-redefined-builtins=id,type,input,open

# Callbacks and async patterns
callbacks=cb_,_cb

[CLASSES]
# Class design patterns for GraphMemory-IDE
defining-attr-methods=__init__,__new__,setUp,__post_init__

# Valid metaclasses for GraphMemory patterns
valid-metaclasses=abc.ABCMeta,type

# Exclude certain attributes from being checked
exclude-protected=_asdict,_fields,_replace,_source,_make

[DESIGN]
# Design complexity thresholds
max-args=8
max-locals=20
max-returns=6
max-branches=15
max-statements=60
max-parents=7
max-attributes=12
max-public-methods=25
max-bool-expr=5

# GraphMemory-IDE specific patterns
min-public-methods=1

[EXCEPTIONS]
# Exception handling patterns
overgeneral-exceptions=Exception,BaseException

[IMPORTS]
# Import organization and validation
deprecated-modules=optparse,imp

# External dependencies
known-third-party=fastapi,pydantic,kuzu,redis,asyncio,pytest,numpy,pandas

# Internal modules
known-first-party=server,dashboard,scripts,monitoring

[PERFORMANCE]
# Performance optimization hints
enable-performance-hints=yes

# Async patterns validation
check-async-patterns=yes

# Memory usage optimization
check-memory-patterns=yes

[SECURITY]
# Security pattern validation (integrated with Phase 1)
enable-security-checks=yes

# Hardcoded password detection
check-hardcoded-passwords=yes

# SQL injection pattern detection
check-sql-injection=yes

# XSS prevention patterns
check-xss-patterns=yes

[GRAPHMEMORY]
# GraphMemory-IDE specific configuration section

# Graph database patterns
graph-operation-complexity-threshold=20
allow-complex-graph-queries=yes

# Real-time collaboration patterns
allow-websocket-async-patterns=yes
crdt-operation-complexity-threshold=15

# Analytics engine patterns
allow-complex-analytics-queries=yes
analytics-query-length-threshold=100

# Tenant isolation patterns
enforce-tenant-isolation-checks=yes
tenant-validation-required=yes

# Performance patterns
allow-caching-decorators=yes
require-async-patterns=yes

# Documentation patterns specific to GraphMemory-IDE
require-api-documentation=yes
require-graph-operation-docs=yes
require-security-pattern-docs=yes 